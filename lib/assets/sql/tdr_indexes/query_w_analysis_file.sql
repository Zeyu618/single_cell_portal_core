/*
Query below demonstrates ability to access and process HCA metadata from
TDR Snapshot: hca_dev_20210803_searchapi___20210803
Google Project ID: datarepo-dev-0f9f0d44
ID: 25740be5-b493-4185-84b0-bebf425c5072
SCP engineering team and SCP service accounts should have access to the snapshot
This query can be run manually from the google BigQuery console
https://console.cloud.google.com/bigquery?project=<Google Cloud project name>
A refined form of this query is intended to be used as input to the TDE createSearchIndex endpoint:
https://jade.datarepo-dev.broadinstitute.org/api/repository/v1/search/<snapshot UUID>/index

This query is based on work from the TDE team which can be found at
https://github.com/DataBiosphere/jade-data-repo/blob/develop/ops/query.sql

Notable differences:
• removed WHERE clause that restricted results to PulmonaryFibrosisGSE135893 project
• added drs_id for drs URL of analysis file (output_id is analog for sequence_file)
• added analysis_format for distinguishing between [bam|loom] file types
• added analysis_source to capture when matrix is generated by 'DCP/2-generated matrix'

Information on mappings between HCA metadata schema, TIM data model and SCP metadata convention names:
https://docs.google.com/spreadsheets/d/1xM2Sz8SCVRFtCFHYRS1yjDMC0_tAkRIfBisHGliJNUQ/edit#gid=0

Additional references:

Document from TDE team on indexing and search
https://docs.google.com/document/d/1KJcF6aWLub--yvTIeZkd_VgTBChinuFqK2aCzSo6hgQ/edit#

Swagger docs for TDR-dev API
https://jade.datarepo-dev.broadinstitute.org/swagger-ui.html#/

*/
WITH links AS
(SELECT project.datarepo_row_id AS project_datarepo_row_id, links.datarepo_row_id AS links_datarepo_row_id, links_id, links.project_id, project.content AS project_content, links.content AS links_content
FROM
`datarepo-dev-0f9f0d44.hca_dev_20210803_searchapi___20210803.project` AS project,
`datarepo-dev-0f9f0d44.hca_dev_20210803_searchapi___20210803.links` AS links
WHERE project.project_id = links.project_id)
SELECT
GENERATE_UUID() uuid,
links.project_datarepo_row_id AS project_datarepo_row_id,
links.project_id AS project_id,
JSON_EXTRACT_SCALAR(project_content, '$.project_core.project_short_name') AS tim__rdfsc__label,
JSON_EXTRACT_SCALAR(project_content, '$.project_core.project_title') AS tim__dctc__title,
JSON_EXTRACT_SCALAR(project_content, '$.project_core.project_description') AS tim__dctc__description,
links.links_datarepo_row_id AS links_datarepo_row_id,
links.links_id AS links_id,
JSON_EXTRACT_SCALAR(link, '$.link_type') AS link_type,
JSON_EXTRACT_SCALAR(link, '$.process_type') AS process_type,
JSON_EXTRACT_SCALAR(link, '$.process_id') AS process_id,
JSON_EXTRACT_SCALAR(input, '$.input_type') AS input_type,
JSON_EXTRACT_SCALAR(input, '$.input_id') AS input_id,
JSON_EXTRACT_SCALAR(output, '$.output_type') AS output_type,
sequence_file.file_id AS output_id,
analysis_file.file_id AS drs_id,
JSON_EXTRACT_SCALAR(analysis_file.content, '$.file_core.format') AS analysis_format,
JSON_EXTRACT_SCALAR(content_description, '$.text') AS analysis_source,
JSON_EXTRACT_SCALAR(link, '$.entity.entity_type') AS entity_type,
JSON_EXTRACT_SCALAR(link, '$.entity.entity_id') AS entity_id,
JSON_EXTRACT_SCALAR(files, '$.file_type') AS file_type,
JSON_EXTRACT_SCALAR(files, '$.file_id') AS file_id,
cell_suspension_id AS cell_suspension_id,
JSON_EXTRACT_SCALAR(cell_suspension.content, '$.biomaterial_core.biomaterial_id') AS tim__dctc__identifier,
JSON_EXTRACT_SCALAR(cell_suspension.content, '$.selected_cell_type') AS tim__a__terraa__corec__hasa__selecteda__cella__type,
JSON_EXTRACT_SCALAR(donor_organism.content, '$.biomaterial_core.biomaterial_id') AS tim__provc__wasa__deriveda__from,
JSON_EXTRACT_SCALAR(donor_organism.content, '$.sex') AS tim__a__terraa__corec__hasa__sex,
JSON_EXTRACT_SCALAR(donor_organism.content, '$.organism_age') AS organism_age,
JSON_EXTRACT_SCALAR(donor_organism.content, '$.organism_age_unit.text') AS tim__a__terraa__corec__hasa__agea__unit,
JSON_EXTRACT_SCALAR(donor_organism_species, '$.text') AS tim__a__terraa__corec__hasa__organisma__type,
JSON_EXTRACT_SCALAR(specimen_from_organism.content, '$.organ.text') AS tim__a__terraa__corec__hasa__anatomicala__site,
JSON_EXTRACT_SCALAR(diseases, '$.text') AS tim__a__terraa__corec__hasa__disease,
JSON_EXTRACT_SCALAR(library_preparation_protocol.content, '$.library_construction_method.text') AS tim__a__terraa__corec__hasa__librarya__prep,
JSON_EXTRACT_SCALAR(library_preparation_protocol.content, '$.library_construction_method.ontology') AS library_construction_method_ontology,
JSON_EXTRACT_SCALAR(library_preparation_protocol.content, '$.library_construction_method.ontology_label') AS library_construction_method_ontology_label
FROM links
LEFT JOIN UNNEST(JSON_EXTRACT_ARRAY(links.links_content, '$.links')) AS link
LEFT JOIN UNNEST(JSON_EXTRACT_ARRAY(link, '$.inputs')) AS input
LEFT JOIN UNNEST(JSON_EXTRACT_ARRAY(link, '$.outputs')) AS output
LEFT JOIN UNNEST(JSON_EXTRACT_ARRAY(link, '$.files')) AS files
LEFT JOIN `datarepo-dev-0f9f0d44.hca_dev_20210803_searchapi___20210803.cell_suspension` AS cell_suspension ON JSON_EXTRACT_SCALAR(input, '$.input_id') = cell_suspension_id
LEFT JOIN `datarepo-dev-0f9f0d44.hca_dev_20210803_searchapi___20210803.donor_organism` AS donor_organism ON JSON_EXTRACT_SCALAR(input, '$.input_id') = donor_organism_id
LEFT JOIN UNNEST(JSON_EXTRACT_ARRAY(donor_organism.content, '$.genus_species')) AS donor_organism_species
LEFT JOIN `datarepo-dev-0f9f0d44.hca_dev_20210803_searchapi___20210803.specimen_from_organism` AS specimen_from_organism ON JSON_EXTRACT_SCALAR(input, '$.input_id') = specimen_from_organism_id
LEFT JOIN UNNEST(JSON_EXTRACT_ARRAY(specimen_from_organism.content, '$.diseases')) AS diseases
LEFT JOIN UNNEST(JSON_EXTRACT_ARRAY(link, '$.protocols')) AS protocols
LEFT JOIN `datarepo-dev-0f9f0d44.hca_dev_20210803_searchapi___20210803.library_preparation_protocol` AS library_preparation_protocol ON JSON_EXTRACT_SCALAR(protocols, '$.protocol_id') = library_preparation_protocol_id
LEFT JOIN `datarepo-dev-0f9f0d44.hca_dev_20210803_searchapi___20210803.sequence_file` AS sequence_file ON JSON_EXTRACT_SCALAR(output, '$.output_id') = sequence_file_id
LEFT JOIN `datarepo-dev-0f9f0d44.hca_dev_20210803_searchapi___20210803.analysis_file` AS analysis_file ON JSON_EXTRACT_SCALAR(output, '$.output_id') = analysis_file_id
LEFT JOIN UNNEST(JSON_EXTRACT_ARRAY(analysis_file.content, '$.file_core.content_description')) AS content_description
;
