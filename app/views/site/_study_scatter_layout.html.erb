var plotHeight = calculatePlotViewport('#render-target');

var layout = {
    hovermode: 'closest',
    font: plotlyLabelFont,
    margin: {
        t: 25,
        r: 0,
        b: 20,
        l: 0
    },
    height: plotHeight
}

<% if @cluster.data[:cluster_type] == '3d' %>
  var currentCamera = $('#cluster-plot').data('camera');
  layout.scene = {
      camera: currentCamera,
      xaxis: {
          autorange: true,
          title: '<%=  @axes[:x] %>',
          showticklabels: false
      },
      yaxis: {
          autorange: true,
          title: '<%= @axes[:y] %>',
          showticklabels: false
      },
      zaxis: {
          autorange: true,
          title: '<%= @axes[:z] %>',
          showticklabels: false
      },
      aspectmode: 'cube'
  };
  <% if @cluster.data[:domain_ranges].present? %>
      layout.scene.xaxis.autorange = false;
      layout.scene.xaxis.range = <%= raw @range[:x] %>;
      layout.scene.yaxis.autorange = false;
      layout.scene.yaxis.range = <%= raw @range[:y] %>;
      layout.scene.zaxis.autorange = false;
      layout.scene.zaxis.range = <%= raw @range[:z] %>;
      layout.scene.aspectmode = '<%= @aspect[:mode] %>',
      layout.scene.aspectratio = {
          x: <%= @aspect[:x] %>,
          y: <%= @aspect[:y] %>,
          z: <%= @aspect[:z] %>
      }
  <% end %>

<% else %>
  layout.xaxis = {
      title: '<%=  @axes[:x] %>',
      showticklabels: false
  };

  layout.yaxis = {
      title: '<%= @axes[:y] %>',
      showticklabels: false,
      scaleanchor: 'x' // square a 2d plot

  };

  // if user has supplied a range, set that, otherwise let Plotly autorange
  <% if @cluster.data[:domain_ranges].present? %>
    layout.xaxis.range = <%= raw @cluster.data[:domain_ranges]['x'] %>;
    layout.yaxis.range = <%= raw @cluster.data[:domain_ranges]['y'] %>;
  <% else %>
    layout.xaxis.autorange = true;
    layout.yaxis.autorange = true;
  <% end %>

<% end %>