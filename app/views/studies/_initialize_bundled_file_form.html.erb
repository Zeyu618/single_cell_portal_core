<%= form_for(study_file, url: update_study_file_study_path(@study._id), html: {id: "bundled_file_form_#{study_file._id}", class: "bs-callout bs-callout-default initialize_bundled_file_form #{study_file.new_record? ? 'new-' : nil}#{study_file.file_type_class}-form", data: {remote: true}}) do |f| %>
	<%= render partial: 'study_file_errors', locals: {study_file: study_file} %>
  <%= f.hidden_field :study_id, value: params[:id] %>
  <%= f.hidden_field :_id, value: study_file._id %>
  <%= f.hidden_field :study_file_bundle_id, value: study_file.study_file_bundle_id.to_s %>
  <%= hidden_field_tag :selector, "#bundled_file_form_#{study_file._id}" %>
  <%= hidden_field_tag :partial, 'initialize_bundled_file_form' %>
	<div class="form-group row">
		<div class="col-sm-4">
			<%= f.label :name, "#{study_file.file_type} Name" %><br />
			<%= f.text_field :name, class: 'form-control filename', readonly: true, placeholder: 'Filename is taken from uploaded file...', autocomplete: 'off' %>
		</div>
		<div class="col-sm-8">
			<%= f.label :description %><br />
			<%= f.text_field :description, class: 'form-control' %>
		</div>
	</div>
	<div class="form-group row">
    <div class="col-sm-4">
      <%= f.label :file_type %><br />
      <%= f.text_field :file_type, readonly: true, class: 'form-control file-type' %>
    </div>
		<div class="col-sm-5 upload-field">
      <% if !study_file.upload_file_name.nil? %>
        <p><label>Link to file </label><br /><%= render partial: '/layouts/download_link', locals: {study: @study, study_file: study_file} %></p>
      <% else %>
        <%= f.label :upload, 'Upload Data File' %><br />
        <%= f.file_field :upload, class: 'btn btn-info fileinput-button', id: 'upload-bundled-file' %>
        <%= f.hidden_field :status, value: study_file.new_record? ? 'uploading' : 'uploaded' %>
      <% end %>
    </div>
		<div class="col-sm-3">
			<%= f.label :actions %>
			<div class="row">
				<div class="col-xs-6">
					<%= f.submit 'Save', class: 'btn btn-block btn-success save-study-file', disabled: (study_file.upload_file_name.nil?) %>
				</div>
				<div class="col-xs-6">
          <% if study_file.parsing? || study_file.upload_file_name.nil? %>
            <%= link_to 'Delete', '#/', class: 'btn btn-block btn-danger disabled-delete', disabled: 'disabled', title: 'You must wait until the file has finished uploading & parsing before deleting', data: {toggle: 'tooltip'} %>
          <% else %>
            <%= link_to 'Delete', delete_study_file_study_path(@study._id, study_file._id, target: "#bundled_file_form_#{study_file._id}"), method: :delete, class: 'btn btn-block btn-danger delete-file', data: {remote: true} %>
          <% end %>
				</div>
			</div>
		</div>
	</div>
	<div class="form-group upload-progress">
		<table class="table table-condensed">
			<tbody class="files"></tbody>
		</table>
	</div>

	<script type="text/javascript" nonce="<%= content_security_policy_script_nonce %>">

		$(function() {

			$('#bundled_file_form_<%= study_file._id %>').fileupload({
				url: "<%= upload_study_path(@study._id) %>",
				maxChunkSize: 10000000,
				type: 'PATCH',
				acceptFileTypes: ALLOWED_FILE_TYPES['bundled'],
				add: function (e, data) {
					fileUploading = true;
					var that = this;
					var fileName = data.files[0].name.replace(FILENAME_SANITIZER, '_');
          $('#bundled_file_form_<%= study_file._id %> .filename').val(fileName);
          canUpload = validateCandidateUpload("#bundled_file_form_<%= study_file._id %>", fileName, $('.initialize_bundled_file_form .filename'));
          if ( canUpload ) {
              $.getJSON("<%= resume_upload_study_path %>", { file: fileName }, function (result) {
                  var file = result.file;
                  if (file == null) {
                      fileUploading = false;
                      $("#study-files-notice-target").html("<%= escape_javascript( render partial: 'studies/study_file_notices', locals: {message: "You have already uploaded this file.  Please select another file."}) %>");
                  } else {
                      data.uploadedBytes = file && file.size;
                      $.blueimp.fileupload.prototype.options.add.call(that, e, data);
                  }
              });
          } else {
              $('#bundled_file_form_<%= study_file._id %> .filename').val('');
          }
				},
				chunkdone: function(e, data) {
					var perc = parseInt(data.loaded / data.total * 100, 10);
					$(data.context).find('h1').html(perc + "% uploaded");
				},
				done: function(e, data) {
				    var fileType = $('#bundled_file_form_<%= study_file._id %> .file-type').val();
				    if ( fileType === 'BAM Index') {
                var fileName = data.files[0].name.replace(FILENAME_SANITIZER, '_');
                $.ajax({
                    url: "<%= update_status_study_path %>",
                    type: "PATCH",
                    dataType: 'script',
                    data: { status: 'uploaded', file: fileName}
                });
                fileUploading = false;
                $.ajax({
                    url: "<%= retrieve_wizard_upload_study_path(@study._id) %>",
                    data: {file: fileName, selector: '#bundled_file_form_<%= study_file._id %>', partial: 'initialize_bundled_file_form'},
                    dataType: 'script',
                    success: function() {
                        $.ajax({
                            url: "<%= send_to_firecloud_study_path %>",
                            type: 'POST',
                            dataType: 'script',
                            data: {file: fileName}
                        });
                    }
                });
            } else {
                var fileName = data.files[0].name.replace(FILENAME_SANITIZER, '_');
                $.ajax({
                    url: "<%= update_status_study_path %>",
                    type: "PATCH",
                    dataType: 'script',
                    data: { status: 'uploaded', file: fileName},
                    success: function () {
                        fileUploading = false;
                        $.ajax({
                            url: "<%= parse_study_file_study_path(@study._id) %>",
                            type: 'POST',
                            data: {
                                file: fileName,
                                modal_target: '#expression-parse-modal',
                                partial: 'initialize_bundled_file_form',
                                selector: "#bundled_file_form_<%= study_file._id %>"
                            },
                            dataType: 'script'
                        });
                    }
                });
            }
				},
        fail: function(e, data) {
				    if (data.jqXHR != undefined) {
                if (data.jqXHR.responseJSON != undefined) {
                    alert("An error occurred while uploading this file:\n\n" + data.jqXHR.responseJSON.file.errors + "\n\nThis file will be removed once you close this dialog.");
                }
                data.jqXHR.abort();
            }
            fileUploading = false;
            console.log('Aborting upload on study_file: <%= study_file.id %>');
            launchModalSpinner('#delete-modal-spinner','#delete-modal', function() {
                $.ajax({
                    url: "<%= delete_study_file_study_path(@study._id, study_file._id, target: "#bundled_file_form_#{study_file._id}") %>",
                    type: 'DELETE',
                    dataType: 'script'
                });
            });
        }
			});
		});

	</script>

<% end %>
