<%= form_for(study_file, url: update_study_file_study_path(@study._id), html: {id: "primary_data_form_#{study_file._id}", class: "initialize_primary_data_form #{study_file.new_record? ? 'new-fastq-form' : nil}", data: {remote: true}}) do |f| %>
  <%= render partial: 'study_file_errors', locals: {study_file: study_file} %>
  <%= f.hidden_field :study_id, value: params[:id] %>
  <%= f.hidden_field :_id, value: study_file._id %>
  <%= hidden_field_tag :selector, "#primary_data_form_#{study_file._id}" %>
  <%= hidden_field_tag :partial, 'initialize_primary_data_form' %>
  <%= f.hidden_field :study_file_bundle_id %>
  <% study_file.options.each do |key, value| %>
    <%= hidden_field_tag "study_file_options_#{key}", value, name: "study_file[options][#{key}]" %>
  <% end %>
	<div class="form-group row">
		<div class="col-sm-4">
			<%= f.label :name %><br />
			<%= f.text_field :name, class: 'form-control filename', readonly: study_file.human_data? ? false : true, placeholder: 'Filename is taken from uploaded file...', autocomplete: 'off' %>
		</div>
		<div class="col-sm-8">
			<%= f.label :description %><br />
			<%= f.text_field :description, class: 'form-control' %>
		</div>
	</div>
  <div class="form-group row">
    <div class="col-sm-4">
      <%= f.label :file_type %><br />
      <%= f.select :file_type, options_for_select(['Fastq', 'BAM'], f.object.file_type), {}, class: 'form-control file-type' %>
    </div>
    <div class="col-sm-4">
      <%= f.label :taxon_id, 'Species' %> <%= render partial: 'taxon_help_popover', locals: {id: study_file.id.to_s} %><br />
      <%= f.select :taxon_id, options_from_collection_for_select(Taxon.sorted, :id, :display_name, study_file.taxon_id), {include_blank: 'None selected...'}, {class: 'form-control taxon-select'} %>
    </div>
    <div class="col-sm-4 <%= study_file.file_type == 'BAM' ? nil : 'hidden' %> genome-assembly-association">
      <%= f.label :genome_assembly_id, 'Genome Assembly' %><br/>
      <% assemblies = study_file.genome_assembly.present? ? study_file.genome_assembly.taxon.genome_assemblies.map {|a| [a.name, a.id]} : [] %>
      <%= f.select :genome_assembly_id, options_for_select(assemblies, study_file.genome_assembly.present? ? study_file.genome_assembly.id : nil), {prompt: 'Please select species...'}, {class: 'form-control genome-assembly-select'} %>
    </div>
  </div>
  <div class="form-group row">
    <div class="col-sm-4">
      <%= f.label :human_data, "Primary Human Data?" %><br />
      <%= f.select :human_data, options_for_select([['Yes', true],['No', false]], study_file.human_data), {}, class: 'form-control human-data' %>
    </div>
		<div class="col-sm-5 upload-field <%= study_file.human_data? ? 'hidden' : nil %>">
      <% if !study_file.upload_file_name.nil? %>
        <p><label>Link to file </label><br /><%= render partial: '/layouts/download_link', locals: {study: @study, study_file: study_file} %></p>
      <% else %>
        <%= f.label :upload, 'Upload Data File' %><br />
        <%= f.file_field :upload, class: 'btn btn-info fileinput-button upload-fastq' %>
        <%= f.hidden_field :status, value: study_file.new_record? ? 'uploading' : 'uploaded' %>
      <% end %>
		</div>
		<div class="col-sm-5 fastq-field <%= study_file.human_data? ? nil : 'hidden' %>">
			<%= f.label :human_fastq_url, 'Link to primary human fastq file' %><br />
			<%= f.text_field :human_fastq_url, class: 'form-control', disabled: !f.object.human_data? %>
		</div>
		<div class="col-sm-3">
			<%= f.label :actions %>
			<div class="row">
				<div class="col-xs-6">
					<%= f.submit 'Save', class: 'btn btn-block btn-success save-study-file', disabled: !study_file.human_data? && study_file.upload_file_name.blank? %>
				</div>
				<div class="col-xs-6">
          <% if study_file.generation.blank? && !study_file.human_data? %>
            <%= link_to 'Delete', '#/', class: 'btn btn-block btn-danger disabled-delete', disabled: 'disabled', title: 'You must wait until the file has finished pushing to Terra before deleting', data: {toggle: 'tooltip'} %>
          <% else %>
					  <%= link_to 'Delete', delete_study_file_study_path(@study._id, study_file._id, target: "#primary_data_form_#{study_file._id}"), method: :delete, class: 'btn btn-block btn-danger delete-file', data: {remote: true} %>
          <% end %>
				</div>
			</div>
		</div>
	</div>

  <div class="form-group upload-progress">
		<table class="table table-condensed">
			<tbody class="files"></tbody>
		</table>
	</div>

  <div class="initialize-bundle-target">
    <% if study_file.study_file_bundle.present? && !study_file.study_file_bundle.completed? %>
      <%= render partial: 'study_file_bundle_btns', locals: {study_file_id: study_file.id.to_s, file_type: 'BAM'} %>
    <% end %>
  </div>
	<script type="text/javascript" nonce="<%= content_security_policy_script_nonce %>">
      $('#primary_data_form_<%= study_file._id %>').find('.human-data').change(function() {
          var that = $(this);
          var taxonSelect = $('#primary_data_form_<%= study_file._id %>').find('.taxon-select');
          var selectedTaxon = taxonSelect.val();
          if (selectedTaxon !== '') {
              $.getJSON('<%= get_taxon_path %>?taxon=' + selectedTaxon, function (taxon) {
                  if (taxon.restricted) {
                      if (that.val() !== 'true') {
                          taxonSelect.val('');
                          $('#primary_data_form_<%= study_file._id %>').find('.genome-assembly-select').empty();
                      }
                  }
              })
          }
          toggleFastqFields('primary_data_form_<%= study_file._id %>', $(this).val() === 'true');
      });

      $('#primary_data_form_<%= study_file._id %>').find('.file-type').change(function() {
          var fileType = $(this).val();
          var genomeAssemblyDiv = $('#primary_data_form_<%= study_file._id %>').find('.genome-assembly-association');

          if (fileType == 'BAM') {
              genomeAssemblyDiv.removeClass('hidden');
          } else {
              genomeAssemblyDiv.addClass('hidden');
              $('#primary_data_form_<%= study_file._id %>').find('.genome-assembly-select').empty();
          }
      });

      $('#primary_data_form_<%= study_file._id %>').find('.taxon-select').change(function() {
          var selectedTaxon = $(this).val();
          var assemblyDropdown = $('#primary_data_form_<%= study_file._id %>').find('.genome-assembly-select');
          if (selectedTaxon !== '') {
              $.getJSON('<%= get_taxon_path %>?taxon=' + selectedTaxon, function(taxon) {
                  var humanDataSelect = $('#primary_data_form_<%= study_file.id %>').find('.human-data');
                  if (taxon.restricted) {
                      if (humanDataSelect.val() !== 'true') {
                          $('#primary_data_form_<%= study_file.id %>').find('.human-data').val('true');
                      }
                  } else {
                      $('#primary_data_form_<%= study_file.id %>').find('.human-data').val('false');
                  }
                  $.getJSON('<%= get_taxon_assemblies_path %>?taxon=' + selectedTaxon, function (data) {
                          assemblyDropdown.empty();
                          $(data).each(function (index, assembly) {
                              assemblyDropdown.append($('<option />', {
                                  value: assembly[1],
                                  text: assembly[0]
                              }));
                          });
                      }
                  )
                  toggleFastqFields('primary_data_form_<%= study_file._id %>', humanDataSelect.val() === 'true');
              })
          } else {
              assemblyDropdown.empty();
              assemblyDropdown.append('<option value="">Please select species...</option>');
          }
      });

		$(function() {
			$('#primary_data_form_<%= study_file._id %>').fileupload({
				url: "<%= upload_study_path(@study._id) %>",
				maxChunkSize: 10000000,
				type: 'PATCH',
				acceptFileTypes: /((\.(fq|fastq)(\.tar)?\.gz$)|\.bam)/i,
				add: function (e, data) {
					  fileUploading = true;
					  var that = this;
					  var fileName = data.files[0].name.replace(/ /g, '_');
            $('#primary_data_form_<%= study_file._id %> .filename').val(fileName);
            canUpload = validateCandidateUpload("#primary_data_form_<%= study_file._id %>", fileName, $('.initialize_primary_data_form .filename'));
            if ( canUpload ) {
                $.getJSON("<%= resume_upload_study_path %>", {file: fileName}, function (result) {
                    var file = result.file;
                    if (file == null) {
                        fileUploading = false;
                        $("#study-files-notice-target").html("<%= escape_javascript( render partial: 'studies/study_file_notices', locals: {message: "You have already uploaded this file.  Please select another file."}) %>");
                    } else {
                        data.uploadedBytes = file && file.size;
                        $.blueimp.fileupload.prototype.options.add.call(that, e, data);
                    }
                });
            } else {
                $('#primary_data_form_<%= study_file._id %> .filename').val('');
            }
				},
				chunkdone: function(e, data) {
					var perc = parseInt(data.loaded / data.total * 100, 10);
					$(data.context).find('h1').html(perc + "%");
          if ( $('#<%= study_file.id %>-bundle-btns').length === 0 &&
              $('#primary_data_form_<%= study_file._id %>').find('.file-type').val() === 'BAM') {
              $('#primary_data_form_<%= study_file._id %>').find('.initialize-bundle-target').html("<%= j(render partial: 'study_file_bundle_btns', locals: {study_file_id: study_file.id.to_s, file_type: 'BAM'}) %>")
          }
				},
				done: function(e, data) {
					var fileName = data.files[0].name.replace(/ /g, '_');
					$.ajax({
						  url: "<%= update_status_study_path %>",
						  type: "PATCH",
              dataType: 'script',
						  data: { status: 'uploaded', file: fileName}
					});
					fileUploading = false;
            $.ajax({
                url: "<%= retrieve_wizard_upload_study_path(@study._id) %>",
                data: {file: fileName, selector: '#primary_data_form_<%= study_file._id %>', partial: 'initialize_primary_data_form'},
                dataType: 'script',
                success: function() {
                    var numCompleted = $('.initialize_primary_data_form').length;
                    var numNew = $('.new-fastq-form').length;
                    if ( numCompleted - numNew == 1 ) {
                        completeWizardStep('initialize_primary_data_form_nav');
                        setWizardProgress(getWizardStatus());
                        console.log('incrementing status for primary data upload');
                        $('#initialize_primary_data_form_completed').replaceWith("<%= escape_javascript(render partial: 'step_completed', locals: {id: 'initialize_primary_data_form_completed'}) %>");
                        $('#initialize_primary_data_form_nav_completed').html("<span class='fas fa-check text-success'></span>");
                    }
                }
            });
          $.post("<%= send_to_firecloud_study_path %>", {file: fileName});

				},
        fail: function(e, data) {
            if (data.jqXHR != undefined) {
                if (data.jqXHR.responseJSON != undefined) {
                    alert("An error occurred while uploading this file:\n\n" + data.jqXHR.responseJSON.file.errors + "\n\nThis file will be removed once you close this dialog.");
                }
                data.jqXHR.abort();
            }
            fileUploading = false;
            console.log('Aborting upload on study_file: <%= study_file.id %>');
            launchModalSpinner('#delete-modal-spinner','#delete-modal', function() {
                $.ajax({
                    url: "<%= delete_study_file_study_path(@study._id, study_file._id, target: "#primary_data_form_#{study_file._id}") %>",
                    type: 'DELETE',
                    dataType: 'script'
                });
            });

        }
			});
		});

	</script>
<% end %>
