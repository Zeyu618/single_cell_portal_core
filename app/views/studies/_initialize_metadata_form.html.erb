<%= form_for(study_file, url: update_study_file_study_path(@study._id), html: {id: "metadata_form", class: 'initialize_metadata_form', data: {remote: true}}) do |f| %>
  <%= render partial: 'study_file_errors', locals: {study_file: study_file} %>
  <%= f.hidden_field :study_id, value: params[:id] %>
  <%= f.hidden_field :_id, value: study_file._id %>
  <%= hidden_field_tag :selector, '#metadata_form' %>
  <%= hidden_field_tag :partial, 'initialize_metadata_form' %>
  <% convention_required = User.feature_flag_for_instance(current_user, 'convention_required') %>
	<div class="form-group row">
		<div class="col-sm-4">
			<%= f.label :name %><br />
			<%= f.text_field :name, class: 'form-control filename', readonly: true, placeholder: 'Filename is taken from uploaded file...', autocomplete: 'off' %>
		</div>
    <div class="col-sm-4">
			<%= f.label :file_type %><br />
			<%= f.text_field :file_type, readonly: true, class: 'form-control file-type' %>
		</div>
	</div>
	<div class="form-group row">
    <div class="col-sm-8">
			<%= f.label :description %><br />
			<%= f.text_field :description, class: 'form-control' %>
		</div>
  </div>
  <div class="form-group row">
		<div class="col-sm-6">
      <%= f.label :use_metadata_convention do %>
        Do you use SCP conventional names for required metadata column headers?
        <%= render partial: 'metadata_convention_help_popover', locals: {id: f.object.id.to_s} %>
      <% end %>
      <br />
      <%= f.label :use_metadata_convention_true, 'data-analytics-name': 'metadata-convention-optin' do %>
        <%= f.radio_button :use_metadata_convention, true, checked: true, disabled: !study_file.new_record?%>
        Yes
      <% end %>
      &nbsp;
      <%= f.label :use_metadata_convention_false, 'data-analytics-name': 'metadata-convention-optout' do %>
        <% if convention_required %>
          <a href="#/" style="color:#999" id="convention-decline-label-<%= f.object.id.to_s %>"
             data-content="Using the convention is now required.  If this presents a particular issue for your study, please contact us at <a href='mailto:scp-support@broadinstitute.zendesk.com'>scp-support@broadinstitute.zendesk.com</a> so we can help or make any updates to the convention."
             data-toggle="popover"
             data-analytics-name="convention-decline-label">
            <%= f.radio_button :use_metadata_convention, false, checked: false, disabled: true %>
            No
          </a>

        <% else %>
          <%= f.radio_button :use_metadata_convention, false, checked: false, disabled: !study_file.new_record? %>
          No
        <% end %>
      <% end %>
      &nbsp; &nbsp; <a href="#/" id="convention-decline-helplink-<%= f.object.id.to_s %>"
        data-toggle="popover"
        data-content="Please contact us at <a href='mailto:scp-support@broadinstitute.zendesk.com'>scp-support@broadinstitute.zendesk.com</a> so we can help or make any needed updates to the convention."
        data-analytics-name="convention-decline-helplink">
        Using conventional names is an issue for my study
      </a>
      <script type="text/javascript" nonce="<%= content_security_policy_script_nonce %>">
        ['#convention-decline-label-', '#convention-decline-helplink-'].forEach(function(idString) {
          var popoverTarget = idString + '<%= f.object.id.to_s %>'
          $(popoverTarget).on('click', function() {
            window.SCP.log('file-upload:metadata:optout-attempt', {studyAccession: '<%= @study.accession %>'})
          })
          enableHoverPopovers(popoverTarget);
        })
      </script>
      <div id="use-metadata-convention-message"></div>
    </div>
  </div>
  <div class="form-group row">
    <div class="col-sm-5 upload-field">
      <% if !study_file.upload_file_name.nil? %>
        <p><label>Link to file </label><br /><%= render partial: '/layouts/download_link', locals: {study: @study, study_file: study_file} %></p>
      <% else %>
        <%= f.label :upload, 'Upload Data File' %><br />
        <%= f.file_field :upload, class: 'btn btn-info fileinput-button', id: 'upload-metadata' %>
        <%= f.hidden_field :status, value: study_file.new_record? ? 'uploading' : 'uploaded' %>
      <% end %>
		</div>
		<div class="col-sm-3">
			<%= f.label :actions %>
			<div class="row">
				<div class="col-xs-6">
					<%= f.submit 'Save', class: 'btn btn-block btn-success save-study-file', disabled: (study_file.upload_file_name.nil? || study_file.parse_status == 'parsing' ) %>
				</div>
				<div class="col-xs-6">
          <% if study_file.parsing? || study_file.upload_file_name.nil? %>
            <%= link_to 'Delete', '#/', class: 'btn btn-block btn-danger disabled-delete', disabled: 'disabled', title: 'You must wait until the file has finished uploading & parsing before deleting', data: {toggle: 'tooltip'} %>
          <% else %>
            <%= link_to 'Delete', delete_study_file_study_path(@study._id, study_file._id, target: '#metadata_form'), method: :delete, class: 'btn btn-block btn-danger delete-file', data: {remote: true} %>
          <% end %>
				</div>
			</div>
		</div>
	</div>
	<div class="form-group upload-progress">
		<table class="table table-condensed">
			<tbody class="files"></tbody>
		</table>
	</div>

	<script type="text/javascript" nonce="<%= content_security_policy_script_nonce %>">

    function setMetadataConventionMessage(useMetadataConvention) {
        var message;
        const advancedUrl = "https://github.com/broadinstitute/single_cell_portal/wiki/Metadata-File#metadata-powered-advanced-search"
        const advancedLink = `<a href="${advancedUrl}" target="_blank" rel="noreferrer">advanced search</a>`
        const conventionRequired = <%= convention_required == true %>;
        const helpUrl = 'https://github.com/broadinstitute/single_cell_portal/wiki/Metadata-File#scp-conventional-file-format'
        if (conventionRequired) {
          message =
            `Learn <a href="${helpUrl}" target="_blank" rel="noreferrer">how to convert your file</a>.<br/>` +
            `If the file fails metadata convention validation, you will be emailed messages to help correct it.`
        }
        else if (useMetadataConvention === true) {
          message =
            `This makes your data discoverable in ${advancedLink}.<br/>` +
            `If the file fails metadata convention validation, you will be emailed messages to help correct it.`
        } else {
          const formatUrl = 'https://github.com/broadinstitute/single_cell_portal/wiki/Metadata-File#scp-conventional-file-format'
          const contactUsLink = '<a href="mailto:scp-support@broadinstitute.zendesk.com">scp-support@broadinstitute.zendesk.com</a>'
          const contactUs = `If you need assistance, please contact us at ${contactUsLink}.`
          message =
            `Use the SCP metadata convention ("Yes") to make your data discoverable in ${advancedLink}.<br/>` +
            `Learn <a href="${formatUrl}" target="_blank" rel="noreferrer">how to convert your file</a>.  ${contactUs}`
        }
        $('#use-metadata-convention-message').html(message + '<br/>')
    }

		$(function() {
			if (<%= !study_file.upload_file_name.nil? %>) {
				completeWizardStep('initialize_metadata_form_nav');
				console.log('incrementing status for metadata upload');
				$('#initialize_metadata_form_completed').replaceWith("<%= escape_javascript(render partial: 'step_completed', locals: {id: 'initialize_metadata_form_completed'}) %>");
				$('#initialize_metadata_form_nav_completed').html("<span class='fas fa-check text-success'></span>");
      }

      $(document).on('change', '[name="study_file[use_metadata_convention]"]', (event) => {
        const useMetadataConvention = (event.target.value === 'true')
        setMetadataConventionMessage(useMetadataConvention)
      });

      // Default to use the convention
      setMetadataConventionMessage(true)

			$('#metadata_form').fileupload({
				url: "<%= upload_study_path(@study._id) %>",
				maxChunkSize: 10000000, // 10 MB
				type: 'PATCH',
				acceptFileTypes: ALLOWED_FILE_TYPES['plainText'],
				add: async function (e, data) {
					fileUploading = true;
					var that = this;
          const file = data.files[0]
          const fileType = 'metadata'
          const containerId = `${fileType}-metadata-container`

          let validationErrors = []
          <% if User.feature_flag_for_instance(current_user, 'clientside_validation') %>
            $('#metadata-errors').remove() // Remove any prior notice
            $('#metadata_form').append(`<div id="${containerId}"></div>`)
            // Run client-side metadata file validation
            validationErrors = await window.SCP.validateFile(file, fileType)
          <% end %>

          const numErrors = validationErrors.length

          if (numErrors === 0) {
            var fileName = file.name.replace(FILENAME_SANITIZER, '_');
            $('#metadata_form .filename').val(fileName);
            $.getJSON("<%= resume_upload_study_path %>", { file: fileName }, function (result) {
            	var file = result.file;
              if (file == null) {
                  fileUploading = false;
                  $("#study-files-notice-target").html("<%= escape_javascript( render partial: 'studies/study_file_notices', locals: {message: "You have already uploaded this file.  Please select another file."}) %>");
              } else {
                data.uploadedBytes = file && file.size;
                $.blueimp.fileupload.prototype.options.add.call(that, e, data);
              }
            });
          } else {
            const target = document.querySelector(`#${containerId}`)
            window.SCP.renderValidationAlert(
              target, validationErrors, fileType
            )
          }
				},
				chunkdone: function(e, data) {
					var perc = parseInt(data.loaded / data.total * 100, 10);
					$(data.context).find('h1').html(perc + "% uploaded");
				},
				done: function(e, data) {
					var fileName = data.files[0].name.replace(FILENAME_SANITIZER, '_');
          completeWizardStep('initialize_metadata_form_nav');
					$.ajax({
						  url: "<%= update_status_study_path %>",
						  type: "PATCH",
              dataType: 'script',
						  data: { status: 'uploaded', file: fileName},
              success: function() {
                  fileUploading = false;
                  $.ajax({
                      url: "<%= parse_study_file_study_path(@study._id) %>",
                      type: 'POST',
                      data: {
                          file: fileName,
                          modal_target: '#metadata-parse-modal',
                          partial: 'initialize_metadata_form',
                          selector: "#metadata_form"
                      },
                      dataType: 'script'
                  });
              }
					});

				},
        fail: function(e, data) {
            if (data.jqXHR != undefined) {
                if (data.jqXHR.responseJSON != undefined) {
                    alert("An error occurred while uploading this file:\n\n" + data.jqXHR.responseJSON.file.errors + "\n\nThis file will be removed once you close this dialog.");
                }
                data.jqXHR.abort();
            }
            fileUploading = false;

            console.log('Aborting upload on study_file: <%= study_file.id %>');
            launchModalSpinner('#delete-modal-spinner','#delete-modal', function() {
                $.ajax({
                    url: "<%= delete_study_file_study_path(@study._id, study_file._id, target: '#metadata_form') %>",
                    type: 'DELETE',
                    dataType: 'script'
                });
            });
        }
			});
		});

	</script>
<% end %>
